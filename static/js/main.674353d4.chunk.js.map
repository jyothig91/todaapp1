{"version":3,"sources":["components/myprofile.js","App.js","reportWebVitals.js","index.js"],"names":["todo","react_default","a","createElement","App","_useState","useState","_useState2","Object","slicedToArray","title","setTitle","_useState3","_useState4","notes","setNotes","useEffect","localStorage","setItem","JSON","stringify","data","parse","getItem","className","myprofile","placeholder","value","onChange","e","target","onClick","alert","preventDefault","concat","toConsumableArray","map","index","finalData","filter","curEle","removeTask","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"0MAYeA,MAVf,WAEI,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,6BCwFGC,MAzFf,WAAc,IAAAC,EAEYC,mBAAS,IAFrBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEJK,EAFIH,EAAA,GAEEI,EAFFJ,EAAA,GAAAK,EAIYN,mBAAS,IAJrBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAIJE,EAJID,EAAA,GAIEE,EAJFF,EAAA,GAmDZ,OAXAG,oBAAU,WACRC,aAAaC,QAAQ,QAASC,KAAKC,UAAUN,KAC5C,CAACA,IAEJE,oBAAU,WACR,IAAMK,EAAOF,KAAKG,MAAML,aAAaM,QAAQ,UACzCF,GACFN,EAASM,IAEV,IAGDpB,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,OACdvB,EAAAC,EAAAC,cAAA,UAAQqB,UAAU,cACjBvB,EAAAC,EAAAC,cAACsB,EAAD,MACAxB,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,WACbvB,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,iBAEbvB,EAAAC,EAAAC,cAAA,SAAOuB,YAAY,oBAAoBC,MAAOjB,EAAOkB,SAnDrC,SAACC,GACvBlB,EAASkB,EAAEC,OAAOH,UAkDqE1B,EAAAC,EAAAC,cAAA,WAASF,EAAAC,EAAAC,cAAA,WAE1FF,EAAAC,EAAAC,cAAA,UAAQ4B,QA/CI,SAACF,GACrB,GAAW,KAARnB,EAED,OAAOsB,MAAM,oBAEfH,EAAEI,iBACFlB,EAAS,SAACD,GAAD,SAAAoB,OAAA1B,OAAA2B,EAAA,EAAA3B,CACNM,GADM,CAET,CACEJ,aAIJC,EAAS,MAkCC,YAEFV,EAAAC,EAAAC,cAAA,OAAMqB,UAAU,aAGVV,EAAMsB,IAAI,SAACT,EAAMU,GACf,OAEApC,EAAAC,EAAAC,cAAA,OAAMqB,UAAU,QAEhBvB,EAAAC,EAAAC,cAAA,UAAKwB,EAAMjB,OAAWT,EAAAC,EAAAC,cAAA,WAGtBF,EAAAC,EAAAC,cAAA,UAAQ4B,QAAS,kBA1Cb,SAAC7B,GACjB,IAAMoC,EAAUxB,EAAMyB,OAAO,SAACC,EAAOH,GACnC,OAAOA,IAASnC,IAElBa,EAASuB,GAsCwBG,CAAWJ,KAAhC,kBClEDK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAhB,EAAA,GAAAiB,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHzD,EAAAC,EAAAC,cAACF,EAAAC,EAAMyD,WAAP,KACE1D,EAAAC,EAAAC,cAACyD,EAAD,QAOJlB","file":"static/js/main.674353d4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction todo()\r\n{\r\n    return(\r\n        <div>\r\n            <h1>Todo List App</h1>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default todo;","import React from 'react';\nimport './App.css';\nimport {useState,useEffect} from 'react'\nimport Myprofile from './components/myprofile';\n\nfunction App(){\n\n    const[title,setTitle]=useState(\"\");\n  \n    const[notes,setNotes]=useState([])\n   \n\n  const onChangeHandler = (e) => {\n    setTitle(e.target.value);\n  };\n  \n  \n  \n  const addItemList = (e )=>{\n  if(title==='')\n  {\n    return alert(\"pls enter a text\")\n  }\n  e.preventDefault();\n  setNotes((notes)=>[\n  ...notes,\n  {\n    title,\n    \n  }\n]);\nsetTitle(\"\");\n };\n\n\n\n  const removeTask =(a)=>{\n    const finalData=notes.filter((curEle,index) => {\n      return index !==a; \n    })\n    setNotes(finalData)\n  }\n\n  \n\n  useEffect(() => {\n    localStorage.setItem(\"Notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(\"Notes\"));\n    if (data) {\n      setNotes(data);\n    }\n  }, []);\n\n  return(\n    <div className=\"App\">\n     <header className=\"App-header\">\n      <Myprofile/>\n      <div className=\"wrapper\">\n        <div className=\"Input-wrapper\">\n        \n          <input placeholder=\"Enter Title here \" value={title} onChange={onChangeHandler}/><br></br><br></br>\n         \n          <button onClick= {addItemList} >submit </button>\n        </div>\n        < div className=\"container\">\n         \n            {\n              notes.map((value,index)=>{\n                return (\n                  \n                < div className=\"item\">\n                \n                <h3>{value.title}</h3><br></br>\n                \n                \n                <button onClick={()=>removeTask(index)}>Delete</button>\n                \n                </div>\n\n                );\n            })\n            }\n          \n        </div>\n      </div>\n      </header> \n      \n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}